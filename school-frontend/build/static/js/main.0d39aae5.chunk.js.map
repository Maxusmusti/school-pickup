{"version":3,"sources":["helpers/RequestHelper.js","Api.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","makePOST","route","body","headers","onCompletion","forceResponse","targetURL","fetch","method","then","response","ok","json","responseData","makeGET","data","fetchStudents","cb","resp","students","processPoint","point","time","phone","parentFirst","parentLast","childFirst","childLast","grade","message","reformatted","fetchKey","startsWith","i","length","key","Array","isArray","push","reformat","TodoList","props","items","map","item","index","parent","removeItem","markTodoDone","className","TodoListItem","todoClass","done","onClick","style","color","Date","parse","toLocaleString","hour","minute","hour12","TodoHeader","marginBottom","textAlign","today","dd","String","getDate","padStart","mm","getMonth","yyyy","getFullYear","fetchDate","App","useState","todos","setTodos","isLoading","setIsLoading","useEffect","getStudents","result","interval","setInterval","clearInterval","phoneNumber","itemIndex","window","confirm","todoItems","JSON","stringify","console","log","status","markAsDone","alert","todo","splice","unshift","sortingMap","id","display","flexDirection","Object","keys","sort","a","b","title","flex","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error"],"mappings":"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","file":"static/js/main.0d39aae5.chunk.js","sourcesContent":["const makePOST = (route, body, headers, onCompletion, forceResponse=false) => {\n    let targetURL = route\n    fetch(targetURL, {\n        method: 'POST',\n        headers: headers,\n        body: body\n    })\n    .then((response) => {\n        if(response.ok) {\n            return response.json();\n        } else {\n            return forceResponse ? response.json() : {}\n        }\n    })\n    .then((responseData) => {\n        onCompletion(responseData)\n    })\n}\n\nconst makeGET = (route, onCompletion, forceResponse) => {\n    fetch(route)\n    .then(response => {\n        if(response.ok) {\n            return response.json();\n        } else {\n            return forceResponse ? response.json() : {}\n        }\n    })\n    .then(data => onCompletion(data));\n}\n\nmodule.exports = {\n    makePOST,\n    makeGET\n};","import { makePOST, makeGET } from \"./helpers/RequestHelper\"\n\nconst BASEURL = \"https://school-pickup.herokuapp.com\";\n\nexport const markAsDone = (phone, childFirst, childLast, cb) => {\n    const route = (BASEURL ? BASEURL : \"\") + \"/api/done\";\n    // console.log(`Marking phone number ${phone} as done...`)\n    // console.log(JSON.stringify({ phone, childFirst, childLast }))\n    makePOST(route, JSON.stringify({ phone, childFirst, childLast }), { 'Content-Type': 'application/json'}, (resp) => {\n        console.log(resp);\n        const { status } = resp;\n        cb(status);\n    });\n}\n\nexport const fetchStudents = (cb) => {\n    const route = (BASEURL ? BASEURL : \"\") + \"/api/getlist\";\n\n    const reformat = (data) => {\n        if(!data) return [];\n        \n        const processPoint = (point) => {\n            return {\n                time: point[0],\n                phone: point[1],\n                parentFirst: point[2],\n                parentLast: point[3],\n                childFirst: point[4],\n                childLast: point[5],\n                grade: point[6],\n                message: point[7]\n            }\n        }\n\n        var reformatted = {}\n\n        const fetchKey = (grade) => {\n            if(grade.startsWith(\"TOD\")) {\n                return \"Toddler\";\n            } else if(grade.startsWith(\"INF\")) {\n                return \"Infant\";\n            } else if(grade.startsWith(\"OLD INF\") || grade.startsWith(\"OLDINF\")) {\n                return \"Older Infant\";\n            } else if(grade.startsWith(\"PRE 3\") || grade.startsWith(\"PRE3\")) {\n                return \"Preschool 3\";\n            } else if(grade.startsWith(\"EPRE\") || grade.startsWith(\"PRE 4\") || grade.startsWith(\"PRE4\") || grade.startsWith(\"EK\")) {\n                return \"Preschool 4 / EK\";\n            }\n            switch(grade) {\n                case \"K\":\n                case \"01\":\n                case \"02\":\n                case \"03\":\n                case \"04\":\n                case \"05\":\n                case \"06\":\n                case \"07\":\n                case \"08\":\n                    return \"K-8\";\n                default:\n                    return \"Other\";\n            }\n        }\n\n        for(let i = 0; i < data.length; i++) {\n            const point = processPoint(data[i]);\n            const key = fetchKey(point.grade)\n            if(Array.isArray(reformatted[key])) {\n                reformatted[key].push(point);\n            } else {\n                reformatted[key] = [point]\n            }\n        }\n        \n        return reformatted;\n    }\n\n    makeGET(route, (resp) => {\n        const students = reformat(resp);\n        cb(students);\n    });\n}","import React, {useState, useEffect} from 'react';\nimport './App.css';\n\nimport { markAsDone, fetchStudents } from \"./Api\";\n\nconst TodoList = (props) => {\n  var items = props.items.map((item, index) => {\n    return (\n      <>\n        <TodoListItem key={index} item={item} index={index} parent={props.parent} removeItem={props.removeItem} markTodoDone={props.markTodoDone} />\n        <hr />\n      </>\n    );\n  })\n  return (\n  <ul className=\"list-group\"> {items} </ul>\n  );\n}\n\nconst TodoListItem = (props) => {\n\n  const onClickDone = () => {\n    props.markTodoDone(props.item.phone, props.item.childFirst, props.item.childLast, props.index, props.parent);\n  }\n\n  const formatTime = (time) => new Date(Date.parse(time)).toLocaleString('en-US', { hour: 'numeric', minute: 'numeric', hour12: true })\n  \n  var todoClass = props.item.done ? \"done\" : \"undone\";\n    return(\n      <li className=\"list-group-item \">\n        <div className={todoClass} onClick={onClickDone}>\n          <p>{`${props.item.parentFirst} ${props.item.parentLast} picking up` } <b style={{color: \"#FFFFFF\"}}>{`${props.item.childFirst} ${props.item.childLast}`}</b>{` in grade ${props.item.grade}`}</p>\n          <p>{`${props.item.message}`}</p>\n          <p>{`${props.item.phone} || ${formatTime(props.item.time)}`}</p>\n        </div>\n      </li>     \n    );\n}\n\nconst TodoHeader = (props) => {\n  const fetchDate = () => {\n    var today = new Date();\n    var dd = String(today.getDate()).padStart(2, '0');\n    var mm = String(today.getMonth() + 1).padStart(2, '0'); //January is 0!\n    var yyyy = today.getFullYear();\n\n    today = mm + '/' + dd + '/' + yyyy;\n    return today;\n  }\n  \n  return (\n    <h1 style={{marginBottom: '8vh', textAlign: 'center'}}>School Pick Up: {fetchDate()}</h1>\n  );\n}\n\nconst App = () => {\n\n  const [todos, setTodos] = useState({});\n  const [isLoading, setIsLoading] = useState(true);\n\n  useEffect(() => {\n    const getStudents = () => {\n      fetchStudents((result) => {\n        setIsLoading(false);\n        setTodos(result)\n      })\n    }\n    getStudents();\n    const interval = setInterval(() => getStudents(), 10000);\n    return () => {\n      clearInterval(interval);\n    }\n  }, [])\n\n  const markTodoDone = (phoneNumber, childFirst, childLast, itemIndex, key) => {\n    if(window.confirm(\"Are you sure that you want to mark this entry as completed?\")) {\n      setIsLoading(true);\n      var todoItems = todos;\n      markAsDone(phoneNumber, childFirst, childLast, (status) => {\n        if(status === false) {\n          setIsLoading(false)\n          alert(\"Failed to mark this student as picked up! Please try again later\")\n        } else {\n          var todo = todoItems[key][itemIndex];\n          todoItems[key].splice(itemIndex, 1);\n          todo.done = !todo.done;\n          todo.done ? todoItems[key].push(todo) : todoItems[key].unshift(todo);\n          setIsLoading(false)\n          setTodos(todoItems)\n        }\n      })\n    }\n  }\n\n  if(isLoading) return <span>Loading...</span>;\n\n  const sortingMap = {\n    \"Infant\": 0,\n    \"Older Infant\": 1,\n    \"Toddler\": 2,\n    \"Preschool 3\": 3,\n    \"Preschool 4 / EK\": 4,\n    \"K-8\": 5,\n    \"Other\": 6\n}\n\n  return (\n    <div id=\"main\">\n        <TodoHeader />\n        <div style={{display: 'flex', flexDirection: 'row'}}>\n        {\n          Object.keys(todos).sort((a,b) => sortingMap[todos[a].grade] - sortingMap[todos[b].grade]).map((title) => (\n            <div style={{flex: 1}}>\n              <h3 style={{textAlign: 'center', marginBottom: '4vh'}}>{title}</h3>\n              <TodoList items={todos[title]} parent={title} markTodoDone={markTodoDone}/>\n            </div>\n          ))\n        }\n        </div>\n      </div>\n  );\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}